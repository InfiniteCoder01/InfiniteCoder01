Video: https://www.youtube.com/watch?v=FrVABOhRyQg

This is actually an awesome setup! But you are missing Linux, as more and more people this year decided to try it out. And... Linux doesn't have Visual Studio. But it does have VSCode with CMake plugin, and a lot of stuff is easier with Linux (You can use pkg-config for build flags and in most distros you install libraries by doing something like `apt install` or `pacman -S`, or `emerge -a`, or `dnf install`; But I am using nix where you either have to use `nix-env -iA`/`nix profile install` or (what I personally do) - make shell.nix or flake.nix). Also, I want to share my first OpenGL experience (which is actually partially captured in a very old video on my channel, which doesn't even has any form of English translation): Back in 2020, I've used Dev-C++ IDE (not the Embarcadero one) on my Windows Tiny-7 computer. There I made a project with builtin OpenGL template (which used WinAPI and old OpenGL, as old as glBegin and glEnd). Spend some time with it. Then, I've decided to take a challenge of making a Minecraft clone in 7 days. That's what I did and I made a video about it (so cringe, can't even watch it now) (still no part 2...). I've got rect, then cube, and progress was pretty fast (no linking required and glBegin/glEnd were pretty easy to understand). Then I wanted to add a texture to the cube (drew a grass texture in mspaint). This is when my setup crashed. Well, not really. I copy-pasted different parts of code from stack overflow to make a BMP file loader, which actually worked, but for some reason I still wanted more. So, I've installed my first library - SFML. All it took is just downloading and unzipping SFML from the official website and adding a few flags to compiler options in project settings (Under the hood Dev-C++ uses regular Makefiles). Soon after I also got GLM and finished the 7-day minecraft clone (with broken tree generation and no chunks). Later I've switched my setup to Visual Studio, and then I've switched again, to VSCode + MinGW (compiled code from command line, sometimes I made build.bat, sometimes Makefiles). I did another OpenGL project with freeglut and I think glfw, but this was actually a pain to setup all those libraries. Then, after some time I made my own graphics library, which at some point also supported OpenGL (but main target was software-rendering to a framebuffer). It even had an ImGui-style GUI library. And I've built my own build system here. At about this point, I've switched to Linux, so I added an X11 backend for the library. You can check the library at https://github.com/InfiniteCoder01/Mova and my build system at https://github.com/InfiniteCoder01/OreBuild/ P.S. YouTube hates my comments, so if you saw this comment (and wow, actually read this), please, reply. If I won't get a reply in a few days and the comment won't be there for me, I'll repost it. This is like the biggest comment I've ever written
